/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

import g4p_controls.*;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.*;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.Path;



JFileChooser file_chooser = new JFileChooser();

public void playButton_click(GButton source, GEvent event) { //_CODE_:playButton:471477:
  println("playButton - GButton >> GEvent." + event + " @ " + millis());
  
} //_CODE_:playButton:471477:

public void stopButton_click(GButton source, GEvent event) { //_CODE_:stopButton:485553:
  println("stopButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:stopButton:485553:

public void songButton_click(GButton source, GEvent event) { //_CODE_:songButton:902917:
  println("songButton - GButton >> GEvent." + event + " @ " + millis());
  openFile();
} //_CODE_:songButton:902917:

public void optionsButton_click(GButton source, GEvent event) { //_CODE_:optionsButton:431186:
  println("optionsButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:optionsButton:431186:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:895819:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider1:895819:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Sketch Window");
  playButton = new GButton(this, 0, 200, 80, 30);
  playButton.setText("Play");
  playButton.setTextBold();
  playButton.addEventHandler(this, "playButton_click");
  stopButton = new GButton(this, 0, 250, 80, 33);
  stopButton.setText("Stop");
  stopButton.setTextBold();
  stopButton.addEventHandler(this, "stopButton_click");
  songButton = new GButton(this, 381, 200, 80, 30);
  songButton.setText("Song");
  songButton.setTextBold();
  songButton.addEventHandler(this, "songButton_click");
  optionsButton = new GButton(this, 380, 250, 80, 30);
  optionsButton.setText("Options");
  optionsButton.setTextBold();
  optionsButton.addEventHandler(this, "optionsButton_click");
  slider1 = new GSlider(this, 2, 267, 478, 53, 10.0);
  slider1.setShowLimits(true);
  slider1.setTextOrientation(G4P.ORIENT_LEFT);
  slider1.setLimits(0.0, 0.0, 1.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
}

// Variable declarations 
// autogenerated do not edit
GButton playButton; 
GButton stopButton; 
GButton songButton; 
GButton optionsButton; 
GSlider slider1; 


void keyPressed() {
  switch(key) {
    case '1':
      mode = 1;
      break;
    case '2':
      mode = 2;
      break;
    case '3':
      mode = 3;
      break;
  }
}


//FILE OPENER
public void openFile()
{
  try
  {
    SwingUtilities. invokeLater(new Runnable()
    {
      public void run()
      {
        file_chooser.setDialogTitle("Choose a Song");
        file_chooser.setAcceptAllFileFilterUsed(false);
        
        int return_val = file_chooser.showOpenDialog(null);
        if ( return_val == JFileChooser.APPROVE_OPTION)
        {
          File file = file_chooser.getSelectedFile();
        
          
          fileName = file.getAbsolutePath();
          //checkType(fileName);
        }
        else
        {
          fileName = "none";
        }
      }
    }
    );
  }
  catch (Exception e)
  {
    e.printStackTrace();
  }
}

/*
boolean checkType(String type){
    Path source = Paths.get(type);
    println(Files.probeContentType(source).toString());
    return true;
  
}
*/
//FILE FILTER
/* MusicFilter.java is used by FileChooserDemo2.java. */
//FileChooser.ExtensionFilter extFilter = new FileChooser.ExtensionFilter("TEXT files (*.txt)", "*.txt");
